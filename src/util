#!/usr/bin/env bash

function load_cmd() {
  CMD="$1"; shift
  CMD_PATH="$ELASTIC_DIR/src/commands/$CMD"

  if [ -f $CMD_PATH ]; then
    source $CMD_PATH
  else
    echo "'elastic $CMD' is not a command. See 'elastic help'."
    exit 1
  fi
}

function run_cmd() {
  CMD="$1"; shift
  load_cmd $CMD
  run_func "elastic_${CMD}" "$@"
}

function run_func() {
  FUNC="$1"; shift
  EXISTS=$(type $FUNC >/dev/null 2>/dev/null && echo "yes" || echo "no" )

  if [ "$EXISTS" == "yes" ]; then
    $FUNC "$@"
  else
    echo "'$(echo $FUNC | sed 's/_/ /g')' is not a command. See 'elastic help'."
  fi
}

function assert() {
  [[ -z "$1" ]] && echo $2 1>&2 && exit 1 || true
}

function perform() {
  if [[ $DRY_RUN = "1" ]]; then
    echo "+ $@"
  elif [[ $VERBOSE = "1" ]]; then
    (set -x; "$@")
  else
    "$@"
  fi
}

function get() {
  perform $CURL $(url "$@")
}

function post() {
  perform $CURL -X POST -H "Content-Type: application/json" $(url "$@")
}

function put() {
  perform $CURL -X PUT -H "Content-Type: application/json" $(url "$@")
}

function delete() {
  perform $CURL -X DELETE $(url "$@")
}

function url() {
  local url
  if [[ $# -gt 0 ]]; then
    url="$1"; shift
    if [[ $PRETTY = "1" ]]; then
      if [[ $url =~ "?" ]]; then
        url="$url&pretty"
      else
        url="$url?pretty"
      fi
    fi
  else
    url=""
  fi
  url=$(echo $url | sed 's/^\/*//')
  echo "${CLUSTER}/${url} $@"
}
